{
  "openapi": "3.0.2",
  "info": {
    "title": "Algorithms API",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://ag-2021-api.herokuapp.com", 
      "description": "production"
    }, {
      "url": "http://localhost:8080", 
      "description": "local"
    }
  ],
  "paths": {
    "/courses": {
      "get": {
        "operationId": "getAllCourses",
        "description": "Returns all courses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "operationId": "getCourse",
        "description": "Returns a single course by ID",
        "parameters": [
          {
            "description": "The ID of the course",
            "name": "id",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/Id"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The course",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Course does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pages/{id}": {
      "get": {
        "operationId": "getPage",
        "description": "Returns a single page by ID",
        "parameters": [
          {
            "description": "The page ID",
            "name": "id",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/Id"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "404": {
            "description": "Page does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pages/{id}/submit": {
      "post": {
        "operationId": "createPageSubmission",
        "description": "Submits a solution to a page for marking",
        "parameters": [
          {
            "description": "The page ID",
            "name": "id",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/Id"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Submission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The results for the submission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Results"
                }
              }
            }
          },
          "400": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "submission to the pages is forbidden because the page type does not accept submissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Page does not exist!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "description": "THe unique ID of the course",
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "description": "The name of the course",
            "type": "string"
          },
          "firstPage": {
            "description": "The ID of the first page of the course",
            "$ref": "#/components/schemas/Id"
          },
          "pages": {
            "description": "The list of pages for the course",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of the course page",
                  "$ref": "#/components/schemas/Id"
                },
                "type": {
                  "description": "The type of the course page",
                  "$ref": "#/components/schemas/PageType"
                },
                "next": {
                  "description": "The ID of the next page in the course, not applicable for the last page in the course",
                  "$ref": "#/components/schemas/Id"
                },
                "previous": {
                  "description": "The ID of the previous page in the course, not applicable for the first page in the course",
                  "$ref": "#/components/schemas/Id"
                }
              },
              "readOnly": true,
              "required": [
                "id",
                "type"
              ]
            },
            "minItems": 1
          }
        },
        "readOnly": true,
          "required": [
            "id",
            "name",
            "firstPage",
            "pages"
          ]
        
      },
      "PageType": {
        "type": "string",
        "enum": [
          "learn",
          "practice"
        ]
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID for the page",
            "$ref": "#/components/schemas/Id"
          },
          "title": {
            "description": "The title for the page",
            "type": "string"
          },
          "type": {
            "description": "The type of the page",
            "$ref": "#/components/schemas/PageType"
          },
          "sections": {
            "description": "The sections of the page, only applicable for learn type pages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "problem": {
            "description": "The practice problem for the page, only applicable for practice type pages ",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the practice problem",
                "type": "string",
                "enum": [
                  "code",
                  "text",
                  "multichoice"
                ]
              },
              "question": {
                "description": "The problem question prompt to display",
                "type": "string"
              },
              "data": {
                "description": "The data used to display and submit a solution to the problem, dependent on problem type",
                "type": "object"
              },
              "hints": {
                "description": "Hints for solving the problem",
                "type": "array", 
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "type",
              "question",
              "data"
            ],
            "readOnly": true
          }
        },
        "required": [
          "id",
          "type"
        ],
        "readOnly": true
      },
      "Submission": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the submission",
            "type": "string",
            "enum": [
              "code",
              "text",
              "eventStream"
            ]
          },
          "data": {
            "description": "The data for the submission, dependent on submission type",
            "type": "object"
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "Results": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The overall status of the submission",
            "type": "string",
            "enum": [
              "pass",
              "fail"
            ]
          },
          "feedback": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of the test case",
                  "type": "string",
                  "enum": [
                    "sample",
                    "hidden"
                  ]
                },
                "name": {
                  "description": "Then name of the executed test case, not provided for hidden test cases",
                  "type": "string"
                },
                "status": {
                  "description": "The result of executing the submission against this test case",
                  "type": "string",
                  "enum": [
                    "pass",
                    "fail"
                  ]
                },
                "feedback": {
                  "description": "A short description of how to improve the submission to pass the test case, not provided for hidden test cases",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "result"
              ],
              "readOnly": true,
              "minItems": 1
            }
          }
        },
        "required": [
          "status",
          "results"
        ]
      },
      "Id": {
        "type": "string",
        "format": "uuid"
      },
      "Section": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of the section",
            "type": "string",
            "enum": [
              "text",
              "image",
              "animation"
            ]
          },
          "content": {
            "description": "The content to present for the section, dependant on the section type"
          }
        },
        "readOnly": true,
        "required": [
          "type",
          "content"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The HTTP status code of error",
            "type": "integer",
            "format": "uint32"
          },
          "message": {
            "description": "The HTTP message for error",
            "type": "string"
          },
          "reason": {
            "description": "An informative reason for error response",
            "type": "string"
          }
        },
        "readOnly": true,
        "required": [
          "status",
          "message",
          "reason"
        ]
      }
    }
  }
}